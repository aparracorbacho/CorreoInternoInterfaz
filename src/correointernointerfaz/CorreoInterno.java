/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package correointernointerfaz;

import java.io.FileWriter;
import java.io.PrintWriter;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author MotherFoquita
 */
public class CorreoInterno extends javax.swing.JFrame {
    Correos correo = new Correos();
    Object []object = new Object[3];
    String usuario = null;
    DefaultTableModel modelo = new DefaultTableModel();
    
    public void setusuario(String usuario){
        this.usuario = usuario;
    }
    public void grabarcorreo(String ureceptor, String uenvia, String titulo, String contenido){
        correo.agregar(ureceptor, uenvia, titulo, contenido);
            
    }
    
    public void cargar(){
        //Definimos la tabla y el titulo
          
        modelo.addColumn("Id");
        modelo.addColumn("Enviado por");
        modelo.addColumn("Titulo");
        
            
        //Volcamos el contenido de la tabla
        int idcontador = 1;
        for (int i = 0;i<correo.email.size();i++){
            if (usuario.equals(correo.email.get(i).ureceptor)){
            object[0] = idcontador;
            object[1] = (correo.email.get(i).uenvia);
            object[2] = (correo.email.get(i).titulo);
            modelo.addRow(object);
            idcontador++;
            }             
        }
        //Cargamos modelo de la tabla para que muestre filas y titulos
        TCorreos.setModel(modelo);
        //Definimos el tamaÃ±o de las columnas
        TCorreos.getColumnModel().getColumn(0).setMaxWidth(25);
        TCorreos.getColumnModel().getColumn(1).setMaxWidth(150);
        TCorreos.getColumnModel().getColumn(1).setMinWidth(150);
        
        //Definimos que el contenido no sea editable
            for (int i = 0;i<TCorreos.getColumnCount();i++){
                //Indicamos que no se puedan redimensionar las columnas
            TCorreos.getColumnModel().getColumn(i).setResizable(false);
            }
    }
    
    /**
     * Creates new form CorreoInterno
     */
    public CorreoInterno() {
        initComponents();
        CorreoInternoUsuarios correoi = new CorreoInternoUsuarios();
        //Lo primero que hacemos al llegar a esta pantalla es cargar los correos
        correo.volcarcorreos();
        
               
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        SalirCorreo = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        TCorreos = new javax.swing.JTable();
        actualizar = new javax.swing.JButton();
        escribirCorreo = new javax.swing.JButton();
        exportarTodo = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Correo Interno");

        jLabel1.setText("Bienvenido al correo interno de la empresa");

        SalirCorreo.setText("Salir del correo");
        SalirCorreo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SalirCorreoActionPerformed(evt);
            }
        });

        TCorreos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        TCorreos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                TCorreosMousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(TCorreos);

        actualizar.setText("Actualizar");
        actualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actualizarActionPerformed(evt);
            }
        });

        escribirCorreo.setText("Escribir correo");
        escribirCorreo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                escribirCorreoActionPerformed(evt);
            }
        });

        exportarTodo.setText("Exportar todos los correos");
        exportarTodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportarTodoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(SalirCorreo)
                .addGap(31, 31, 31))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(escribirCorreo)
                                .addGap(97, 97, 97)
                                .addComponent(exportarTodo))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 792, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(33, 33, 33)
                                .addComponent(actualizar)))))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(escribirCorreo)
                            .addComponent(exportarTodo))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 153, Short.MAX_VALUE)
                        .addComponent(SalirCorreo)
                        .addGap(25, 25, 25))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(actualizar)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SalirCorreoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SalirCorreoActionPerformed
        // TODO add your handling code here:
         System.exit(0);
    }//GEN-LAST:event_SalirCorreoActionPerformed

    private void actualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actualizarActionPerformed
        // TODO add your handling code here:
        //Codigo para actualizar la lista de correos
        
        //for (int i=0;i<TCorreos.getRowCount();i++){
            modelo.setColumnCount(0);
            modelo.setRowCount(0);
            cargar();
        //}
     
    }//GEN-LAST:event_actualizarActionPerformed

    private void TCorreosMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TCorreosMousePressed
        //Aqui el codigo del evento del doble click
          if (evt.getClickCount() > 1) {
          String uenviacorreo = null, titulocorreo = null, contenidocorreo = null;
              //Recogemos el valor ID de donde emos echo doble click
               JTable target = (JTable)evt.getSource();
               int row = target.getSelectedRow();
               int valor = (int) TCorreos.getValueAt(row, 0);
               //Cogemos todos los datos de ese correo
                     int correoid = 1;
                     for (int i = 0;i<correo.email.size();i++){
                     if (usuario.equals(correo.email.get(i).ureceptor)){
                     if (correoid == valor){ 
                     uenviacorreo = (correo.email.get(i).uenvia);
                     titulocorreo = (correo.email.get(i).titulo);
                     contenidocorreo = (correo.email.get(i).contenido);    
                     }
                     correoid++;
                     }             
                     }
        //Introducimos los datos de ese correo en una nueva ventana para visualizarlos
               VerCorreo vercorreo = new VerCorreo();
               vercorreo.setValores(usuario,uenviacorreo,titulocorreo,contenidocorreo);
               vercorreo.setVisible(true);
               vercorreo.colocar();
          }
        
    }//GEN-LAST:event_TCorreosMousePressed

    private void escribirCorreoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_escribirCorreoActionPerformed
        // TODO add your handling code here:
        Escribir escribir = new Escribir();
        escribir.escribir(usuario);
        escribir.setVisible(true);
    }//GEN-LAST:event_escribirCorreoActionPerformed

    private void exportarTodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportarTodoActionPerformed
        // TODO add your handling code here:
        // Exportamos todos los correos
        FileWriter fichero = null;
        PrintWriter pw = null;
        try {
        String correoexportado = "src/correointernointerfaz/exportado/Correos.txt";
        fichero = new FileWriter(correoexportado);
        String fileLocal = new String(correoexportado);
        for (int i = 0;i<correo.email.size();i++){
            if (usuario.equals(correo.email.get(i).ureceptor)){
               pw = new PrintWriter(fichero);
               pw.println("Titulo: " + correo.email.get(i).titulo);
               pw.println("Enviado por: " + correo.email.get(i).uenvia);
               pw.println("Contenido:\n" + correo.email.get(i).contenido);
               pw.println("\n");
            }
        }
        JOptionPane.showMessageDialog(null, "Fichero exportado correctamente, acepta para abrir" , "Exportacion correcta",JOptionPane.PLAIN_MESSAGE);
        Runtime.getRuntime().exec("cmd /c start "+fileLocal);
        }catch (Exception e) {
           JOptionPane.showMessageDialog(null, e.getMessage() , "Error" ,JOptionPane.ERROR_MESSAGE);
        } finally {
           try {
           if (null != fichero)
              fichero.close();
           } catch (Exception e2) {
              JOptionPane.showMessageDialog(null, e2.getMessage() , "Error",JOptionPane.ERROR_MESSAGE);
           }
        }
        
        
    }//GEN-LAST:event_exportarTodoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CorreoInterno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CorreoInterno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CorreoInterno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CorreoInterno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

    
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CorreoInterno().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton SalirCorreo;
    private javax.swing.JTable TCorreos;
    private javax.swing.JButton actualizar;
    private javax.swing.JButton escribirCorreo;
    private javax.swing.JButton exportarTodo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
